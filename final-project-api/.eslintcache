[{"D:\\LAT. FINAL PROJECT\\final-project-api\\src\\index.js":"1","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\App.js":"2","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\reportWebVitals.js":"3","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\configs\\store.js":"4","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\configs\\routes.js":"5","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\pages\\login\\SignIn.js":"6","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\pages\\login\\SignUp.js":"7","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\pages\\home\\HomeMaster.js":"8","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\configs\\reducers\\index.js":"9","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\configs\\sagas\\index.js":"10","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\pages\\customer\\customerForm\\index.js":"11","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\pages\\transaction\\transactionList\\index.js":"12","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\pages\\customer\\customerList\\index.js":"13","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\pages\\transaction\\transactionForm\\index.js":"14","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\pages\\home\\card\\CardboxMaster.js":"15","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\components\\navbar\\NavbarAdmin.js":"16","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\components\\navbar\\NavbarMaster.js":"17","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\configs\\reducers\\customerReducer.js":"18","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\configs\\reducers\\transactionReducer.js":"19","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\configs\\sagas\\customerSaga.js":"20","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\configs\\sagas\\transactionSaga.js":"21","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\pages\\customer\\customerForm\\CustomerForm.js":"22","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\pages\\transaction\\transactionList\\TransactionList.js":"23","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\pages\\customer\\customerList\\CustomerList.js":"24","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\pages\\transaction\\transactionForm\\TransactionForm.js":"25","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\configs\\api.js":"26","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\actions\\customerAction.js":"27","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\configs\\constants\\actions.js":"28","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\pages\\transaction\\transactionList\\TransactionRow.js":"29","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\components\\DropdownList\\DropdownList.js":"30","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\components\\Containers\\Container.js":"31","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\actions\\transactionAction.js":"32","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\pages\\customer\\customerList\\CustomerRow.js":"33","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\components\\Containers\\index.js":"34","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\configs\\sagas\\loginSaga.js":"35","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\configs\\reducers\\loginReducer.js":"36","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\actions\\loginAction.js":"37"},{"size":569,"mtime":1616136800093,"results":"38","hashOfConfig":"39"},{"size":889,"mtime":1616136800067,"results":"40","hashOfConfig":"39"},{"size":375,"mtime":1616136800111,"results":"41","hashOfConfig":"39"},{"size":349,"mtime":1616136800091,"results":"42","hashOfConfig":"39"},{"size":1799,"mtime":1616137310114,"results":"43","hashOfConfig":"39"},{"size":7790,"mtime":1616208932336,"results":"44","hashOfConfig":"39"},{"size":12462,"mtime":1616136800106,"results":"45","hashOfConfig":"39"},{"size":2254,"mtime":1616207581750,"results":"46","hashOfConfig":"39"},{"size":752,"mtime":1616141204699,"results":"47","hashOfConfig":"39"},{"size":706,"mtime":1616141204668,"results":"48","hashOfConfig":"39"},{"size":38,"mtime":1616136800097,"results":"49","hashOfConfig":"39"},{"size":41,"mtime":1616136800111,"results":"50","hashOfConfig":"39"},{"size":38,"mtime":1616136800099,"results":"51","hashOfConfig":"39"},{"size":41,"mtime":1616136800109,"results":"52","hashOfConfig":"39"},{"size":2727,"mtime":1616136800102,"results":"53","hashOfConfig":"39"},{"size":4236,"mtime":1616136800081,"results":"54","hashOfConfig":"39"},{"size":3451,"mtime":1616136800082,"results":"55","hashOfConfig":"39"},{"size":3082,"mtime":1616210469065,"results":"56","hashOfConfig":"39"},{"size":3676,"mtime":1616136800088,"results":"57","hashOfConfig":"39"},{"size":2284,"mtime":1616213395854,"results":"58","hashOfConfig":"39"},{"size":2890,"mtime":1616136800091,"results":"59","hashOfConfig":"39"},{"size":12203,"mtime":1616209194296,"results":"60","hashOfConfig":"39"},{"size":3078,"mtime":1616136800109,"results":"61","hashOfConfig":"39"},{"size":3965,"mtime":1616209414814,"results":"62","hashOfConfig":"39"},{"size":10264,"mtime":1616137310118,"results":"63","hashOfConfig":"39"},{"size":636,"mtime":1616213395881,"results":"64","hashOfConfig":"39"},{"size":581,"mtime":1616137310113,"results":"65","hashOfConfig":"39"},{"size":1889,"mtime":1616140018916,"results":"66","hashOfConfig":"39"},{"size":1214,"mtime":1616137310118,"results":"67","hashOfConfig":"39"},{"size":822,"mtime":1616136800081,"results":"68","hashOfConfig":"39"},{"size":495,"mtime":1616136800079,"results":"69","hashOfConfig":"39"},{"size":620,"mtime":1616136800068,"results":"70","hashOfConfig":"39"},{"size":1393,"mtime":1616137310117,"results":"71","hashOfConfig":"39"},{"size":35,"mtime":1616136800080,"results":"72","hashOfConfig":"39"},{"size":898,"mtime":1616146308424,"results":"73","hashOfConfig":"39"},{"size":898,"mtime":1616141204639,"results":"74","hashOfConfig":"39"},{"size":194,"mtime":1616141786646,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"d9lcxq",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"D:\\LAT. FINAL PROJECT\\final-project-api\\src\\index.js",[],["159","160"],"D:\\LAT. FINAL PROJECT\\final-project-api\\src\\App.js",[],"D:\\LAT. FINAL PROJECT\\final-project-api\\src\\reportWebVitals.js",[],"D:\\LAT. FINAL PROJECT\\final-project-api\\src\\configs\\store.js",[],"D:\\LAT. FINAL PROJECT\\final-project-api\\src\\configs\\routes.js",[],"D:\\LAT. FINAL PROJECT\\final-project-api\\src\\pages\\login\\SignIn.js",["161","162"],"import React, {useEffect, useState} from \"react\";\r\nimport {faKey, faUser} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {Button} from \"reactstrap\";\r\nimport undraw_Access_account_re_8spm from \"../../assets/images/undraw_Access_account_re_8spm.svg\"\r\nimport \"./login.css\"\r\nimport {useHistory} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginRequestAction} from \"../../actions/loginAction\";\r\n\r\nconst SignIn = ({loginData, isLoading, error, dispatchLoginAction}) => {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [usernameError, setUsernameError] = useState('');\r\n    const [passwordError, setPasswordError] = useState('');\r\n\r\n    const [validation, setValidation] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const onSubmit = () => {\r\n        const isValid = validate();\r\n\r\n        if (isValid) {\r\n            const data = {\r\n                username: username,\r\n                password: password\r\n            }\r\n            console.log(\"ini data\", data)\r\n            dispatchLoginAction(data)\r\n\r\n            //axios\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // jika login sukses\r\n        if (loginData) {\r\n            localStorage.setItem('token', loginData.token)\r\n            localStorage.setItem('roles', loginData.roles)\r\n            console.log(\"sukses login\", loginData)\r\n\r\n            //pilih role\r\n            if (loginData.roles === \"MASTER\") {\r\n                history.push('/master/home')\r\n            } else if (loginData.roles === \"STAFF\") {\r\n                history.push('/master/home')\r\n            } else {\r\n                setValidation(\"*Supervisor not allow sign here\")\r\n            }\r\n            console.log(\"ini role\", loginData.roles)\r\n\r\n            // sweetAlert(\"Login Success!\", \"\", \"success\");\r\n            // history.push('/master/home')\r\n        }\r\n\r\n        // jika login error\r\n        if (error) {\r\n            setValidation(\"*Username or Password invalid!\")\r\n            // swal(\"Login Error!\", \"\", \"error\");\r\n        }\r\n\r\n    }, [loginData, error])\r\n\r\n    useEffect(() => {\r\n        setValidation(\"\")\r\n        setUsernameError(\"\")\r\n        setPasswordError(\"\")\r\n    }, [username, password])\r\n\r\n    const validate = () => {\r\n        //var kosong, agar bisa di update isinya\r\n        let usernameError = \"\";\r\n        let passwordError = \"\";\r\n\r\n        if (!username) {\r\n            usernameError = \"*please enter username\"\r\n        }\r\n        if (!password) {\r\n            passwordError = \"*please enter password\"\r\n        }\r\n        if (usernameError || passwordError) {\r\n            setUsernameError(usernameError);\r\n            setPasswordError(passwordError);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const handleUsernameChange = (e) => {\r\n        const inputValue = e.target.value;\r\n        const isEmpty = inputValue === \"\";\r\n        setUsername(inputValue)\r\n        setUsernameError(isEmpty)\r\n    }\r\n\r\n    const handlePasswordChange = (e) => {\r\n        const inputValue = e.target.value;\r\n        const isEmpty = inputValue === \"\";\r\n        setPassword(inputValue)\r\n        setPasswordError(isEmpty)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-center\">\r\n                <div className=\"col-md-5 pr-lg-5 mb-md-0\">\r\n                    <img src={undraw_Access_account_re_8spm} alt=\"\"\r\n                         className=\"img-fluid d-none d-md-block\"/>\r\n                </div>\r\n\r\n                <div className=\"col-md-7 col-lg-6 ml-auto\">\r\n                    <h1 style={{color: \"#e42256\", fontSize: \"55px\"}}>Sign In</h1><br/>\r\n                    <form>\r\n                        <div className=\"row\">\r\n\r\n                            <div className=\"input-group col-lg-12 mb-4\">\r\n                                <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faUser}/>\r\n                                        </span>\r\n                                </div>\r\n                                <input id=\"username\"\r\n                                       type=\"text\"\r\n                                       name=\"username\"\r\n                                       placeholder=\"Username\"\r\n                                       onChange={(e) => handleUsernameChange(e)}\r\n                                       value={username}\r\n                                       className=\"form-control bg-white border-left-0 border-md\"/>\r\n                            </div>\r\n                            <div style={{\r\n                                marginLeft: \"20px\",\r\n                                marginTop: \"-25px\",\r\n                                marginBottom: \"20px\",\r\n                                color: \"red\"\r\n                            }}>\r\n                                {usernameError}\r\n                            </div>\r\n\r\n                            <div className=\"input-group col-lg-12 mb-4\">\r\n                                <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faKey}/>\r\n                                        </span>\r\n                                </div>\r\n                                <input id=\"password\"\r\n                                       type=\"password\"\r\n                                       name=\"password\"\r\n                                       placeholder=\"Password\"\r\n                                       onChange={(e) => handlePasswordChange(e)}\r\n                                       className=\"form-control bg-white border-left-0 border-md\"/>\r\n                            </div>\r\n                            <div style={{\r\n                                marginLeft: \"20px\",\r\n                                marginTop: \"-25px\",\r\n                                marginBottom: \"20px\",\r\n                                color: \"red\"\r\n                            }}>{passwordError}</div>\r\n\r\n                            <div className=\"form-group col-lg-12 mx-auto mb-0\">\r\n                                <div style={{fontSize: 12, color: \"red\"}}>{validation}</div>\r\n                                <Button\r\n                                    style={{background: \"#e42256\"}}\r\n                                    onClick={() => onSubmit()}\r\n                                    block>\r\n                                        <span className=\"font-weight-bold\"\r\n                                              style={{color: \"#ffff\"}}>SIGN IN</span>\r\n                                </Button>\r\n                            </div>\r\n\r\n                            <div className=\"text-center w-100\">\r\n                                <p className=\"text-muted font-weight-bold\">\r\n                                    Forgot Password?\r\n                                    <a href=\"#\" className=\"text-primary ml-2\">Click here</a>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loginData: state.loginReducer.data,\r\n        isLoading: state.loginReducer.isLoading,\r\n        error: state.loginReducer.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    dispatchLoginAction: loginRequestAction\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\pages\\login\\SignUp.js",["163","164","165","166","167","168","169","170","171"],"import React, {useState} from 'react';\r\nimport undraw_Updated_resume_re_q1or from \"../../assets/images/undraw_Updated_resume_re_q1or.svg\"\r\nimport {\r\n    faEnvelope,\r\n    faKey,\r\n    faServer,\r\n    faUser,\r\n    faUserCircle\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport \"./login.css\"\r\nimport {FormText, Input, Label, FormGroup, Button} from \"reactstrap\";\r\nimport Header from \"../../components/navbar/NavbarAdmin\";\r\nimport swal from 'sweetalert';\r\n\r\nconst SignUp = () => {\r\n\r\n    const [fullName, setFullName] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [role, setRole] = useState('');\r\n    const [profilePicture, setProfilePicture] = useState('');\r\n\r\n    const [fullNameError, setFullNameError] = useState('');\r\n    const [usernameError, setUsernameError] = useState('');\r\n    const [emailError, setEmailError] = useState('');\r\n    const [passwordError, setPasswordError] = useState('');\r\n    const [roleError, setRoleError] = useState('');\r\n    const [profilePictureError, setProfilePictureError] = useState('');\r\n\r\n    const onSubmit = () => {\r\n        const isValid = validate();\r\n\r\n        if (isValid) {\r\n            const data = {\r\n                fullName: fullName,\r\n                username: username,\r\n                email: email,\r\n                password: password,\r\n                role: role,\r\n                profilePicture: profilePicture\r\n            }\r\n            //axios\r\n        }\r\n    }\r\n\r\n    const validate = () => {\r\n        let fullNameError = \"\";\r\n        let usernameError = \"\";\r\n        let emailError = \"\";\r\n        let passwordError = \"\";\r\n        let roleError = \"\";\r\n        let profilePictureError = \"\";\r\n\r\n        if (!fullName) {\r\n            fullNameError = \"*please enter fullname\"\r\n        }\r\n        if (!username) {\r\n            usernameError = \"*please enter username\"\r\n        }\r\n        if (!email) {\r\n            emailError = \"*please enter email\"\r\n        }\r\n        if (!password) {\r\n            passwordError = \"*please enter password\"\r\n        }\r\n        if (!role) {\r\n            roleError = \"*please select one\"\r\n        }\r\n        if (!profilePicture) {\r\n            profilePictureError = \"*please upload photo\"\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const handleFullNameChange = (e) => {\r\n        const inputValue = e.target.value;\r\n        const isEmpty = inputValue === \"\";\r\n        setFullName(inputValue)\r\n        setFullNameError(isEmpty)\r\n    }\r\n\r\n    const handleUsernameChange = (e) => {\r\n        const inputValue = e.target.value;\r\n        const isEmpty = inputValue === \"\";\r\n        setUsername(inputValue)\r\n        setUsernameError(isEmpty)\r\n    }\r\n\r\n    const handleEmailChange = (e) => {\r\n        const inputValue = e.target.value;\r\n        const isEmpty = inputValue === \"\";\r\n        setEmail(inputValue)\r\n        setEmailError(isEmpty)\r\n    }\r\n\r\n    const handlePasswordChange = (e) => {\r\n        const inputValue = e.target.value;\r\n        const isEmpty = inputValue === \"\";\r\n        setPassword(inputValue)\r\n        setPasswordError(isEmpty)\r\n    }\r\n\r\n    const handleRoleChange = (e) => {\r\n        const inputValue = e.target.value;\r\n        const isEmpty = inputValue === \"\";\r\n        setRole(inputValue)\r\n        setRoleError(isEmpty)\r\n    }\r\n\r\n    const handleProfilPictureChange = (e) => {\r\n        const inputValue = e.target.value;\r\n        const isEmpty = inputValue === \"\";\r\n        setProfilePicture(inputValue)\r\n        setProfilePictureError(isEmpty)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header/>\r\n\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row align-items-center\">\r\n\r\n                    <div className=\"col-md-5 pr-lg-5 mb-5 mb-md-0\">\r\n                        <img src={undraw_Updated_resume_re_q1or} alt=\"\" className=\"img-fluid mb-3 d-none d-md-block\"/>\r\n                        <h1 style={{color: \"#e42256\", fontSize: \"55px\"}}>Create new account</h1>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-7 col-lg-6 ml-auto\">\r\n                        <form>\r\n                            <div className=\"row\">\r\n\r\n                                <div className=\"input-group col-lg-12 mb-4\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faUserCircle}/>\r\n                                        </span>\r\n                                    </div>\r\n                                    <input id=\"fullname\"\r\n                                           type=\"text\"\r\n                                           name=\"fullname\"\r\n                                           placeholder=\"Full Name\"\r\n                                           onChange={(e) => handleFullNameChange(e)}\r\n                                           className=\"form-control bg-white border-left-0 border-md\"/><br/>\r\n                                </div>\r\n                                <div style={{\r\n                                    marginLeft:\"20px\",\r\n                                    marginTop:\"-25px\",\r\n                                    marginBottom:\"20px\",\r\n                                    color:\"red\"}}>\r\n                                    {fullNameError}\r\n                                </div>\r\n\r\n                                <div className=\"input-group col-lg-12 mb-4\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faUser}/>\r\n                                        </span>\r\n                                    </div>\r\n                                    <input id=\"username\"\r\n                                           type=\"text\"\r\n                                           name=\"username\"\r\n                                           placeholder=\"Username\"\r\n                                           onChange={(e) => handleUsernameChange(e)}\r\n                                           className=\"form-control bg-white border-left-0 border-md\"/>\r\n                                </div>\r\n                                <div style={{\r\n                                    marginLeft:\"20px\",\r\n                                    marginTop:\"-25px\",\r\n                                    marginBottom:\"20px\",\r\n                                    color:\"red\"}}>\r\n                                    {usernameError}\r\n                                </div>\r\n\r\n\r\n                                <div className=\"input-group col-lg-12 mb-4\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faEnvelope}/>\r\n                                        </span>\r\n                                    </div>\r\n                                    <input id=\"email\"\r\n                                           type=\"email\"\r\n                                           name=\"email\"\r\n                                           placeholder=\"Email Address\"\r\n                                           onChange={(e) => handleEmailChange(e)}\r\n                                           className=\"form-control bg-white border-left-0 border-md\"/><br/>\r\n                                </div>\r\n                                <div style={{\r\n                                    marginLeft:\"20px\",\r\n                                    marginTop:\"-25px\",\r\n                                    marginBottom:\"20px\",\r\n                                    color:\"red\"}}>\r\n                                    {emailError}\r\n                                </div>\r\n\r\n                                <div className=\"input-group col-lg-12 mb-4\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faKey}/>\r\n                                        </span>\r\n                                    </div>\r\n                                    <input id=\"password\"\r\n                                           type=\"password\"\r\n                                           name=\"password\"\r\n                                           placeholder=\"Password\"\r\n                                           onChange={(e) => handlePasswordChange(e)}\r\n                                           className=\"form-control bg-white border-left-0 border-md\"/><br/>\r\n                                </div>\r\n                                <div style={{\r\n                                    marginLeft:\"20px\",\r\n                                    marginTop:\"-25px\",\r\n                                    marginBottom:\"20px\",\r\n                                    color:\"red\"}}>\r\n                                    {passwordError}\r\n                                </div>\r\n\r\n                                <div className=\"input-group col-lg-12 mb-4\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faServer}/>\r\n                                        </span>\r\n                                    </div>\r\n                                    <select id=\"job\" name=\"jobtitle\"\r\n                                            className=\"form-control custom-select bg-white border-left-0 border-md\">\r\n                                        <option selected>---Choose the role---</option>\r\n                                        <option value=\"1\">Supervisor</option>\r\n                                        <option value=\"2\">Staff</option>\r\n                                        onChange={(e) => handleRoleChange(e)}\r\n                                    </select><br/>\r\n                                </div>\r\n                                <div style={{\r\n                                    marginLeft:\"20px\",\r\n                                    marginTop:\"-25px\",\r\n                                    marginBottom:\"20px\",\r\n                                    color:\"red\"}}>\r\n                                    {roleError}\r\n                                </div>\r\n\r\n                                <div className=\"input-group col-lg-12 mb-4\">\r\n                                    <FormGroup>\r\n                                        <Label for=\"exampleFile\">File</Label>\r\n                                        <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\r\n                                        <FormText color=\"muted\">\r\n                                            max/min size 500kb.\r\n                                        </FormText>\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div style={{\r\n                                    marginLeft: \"20px\",\r\n                                    marginTop: \"-25px\",\r\n                                    marginBottom: \"20px\",\r\n                                    color: \"red\"\r\n                                }}>\r\n                                    {profilePictureError}\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-lg-12 mx-auto mb-0\">\r\n                                    <Button style={{background: \"#e42256\"}} onClick={() => onSubmit()} href=\"/master/home\" block>\r\n                                            <span className=\"font-weight-bold\"\r\n                                                  style={{color: \"#ffff\"}}>CREATE ACCOUNT</span>\r\n                                    </Button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default SignUp;","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\pages\\home\\HomeMaster.js",["172","173"],"import React, {Component} from \"react\";\r\nimport CardboxMaster from \"./card/CardboxMaster\";\r\nimport {Row, Button, Jumbotron, Col} from \"reactstrap\";\r\nimport './home.css';\r\nimport Image from \"../../assets/images/undraw_Code_thinking_re_gka2.svg\"\r\nimport HeaderMaster from \"../../components/navbar/NavbarMaster\";\r\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nclass HomeMaster extends Component {\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                {\r\n                    localStorage.getItem(\"roles\") == \"MASTER\" ?\r\n                        <>\r\n                            <HeaderMaster/>\r\n                            <div className=\"jumbotron\">\r\n                                <Jumbotron className=\"jumbotron-fluid\" style={{height: \"30vh\"}}>\r\n                                    <Row style={{marginTop: \"-5%\"}}>\r\n                                        <Col>\r\n                                            <h1 style={{color: \"#e42256\", fontSize: \"5vw\", marginLeft: \"15%\"}}>Hello,\r\n                                                Admin!</h1>\r\n                                            <p style={{fontSize: \"2vw\", marginLeft: \"15%\"}}>What do you want to do?</p>\r\n                                            <Button href=\"/register\"\r\n                                                    style={{background: \"#e42256\", marginLeft: \"15%\", marginTop: \"5%\"}}><FontAwesomeIcon\r\n                                                icon={faPlus}/> New Account</Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <img src={Image} alt=\"image\" className=\"img-fluid float-right\"\r\n                                                 style={{marginRight: \"15%\"}}/>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Jumbotron>\r\n                            </div>\r\n                            <CardboxMaster/>\r\n                        </>\r\n                        :\r\n                        <div> cannot access</div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomeMaster;","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\configs\\reducers\\index.js",[],"D:\\LAT. FINAL PROJECT\\final-project-api\\src\\configs\\sagas\\index.js",[],"D:\\LAT. FINAL PROJECT\\final-project-api\\src\\pages\\customer\\customerForm\\index.js",[],"D:\\LAT. FINAL PROJECT\\final-project-api\\src\\pages\\transaction\\transactionList\\index.js",[],"D:\\LAT. FINAL PROJECT\\final-project-api\\src\\pages\\customer\\customerList\\index.js",[],"D:\\LAT. FINAL PROJECT\\final-project-api\\src\\pages\\transaction\\transactionForm\\index.js",[],"D:\\LAT. FINAL PROJECT\\final-project-api\\src\\pages\\home\\card\\CardboxMaster.js",[],"D:\\LAT. FINAL PROJECT\\final-project-api\\src\\components\\navbar\\NavbarAdmin.js",[],"D:\\LAT. FINAL PROJECT\\final-project-api\\src\\components\\navbar\\NavbarMaster.js",[],"D:\\LAT. FINAL PROJECT\\final-project-api\\src\\configs\\reducers\\customerReducer.js",[],"D:\\LAT. FINAL PROJECT\\final-project-api\\src\\configs\\reducers\\transactionReducer.js",[],"D:\\LAT. FINAL PROJECT\\final-project-api\\src\\configs\\sagas\\customerSaga.js",[],"D:\\LAT. FINAL PROJECT\\final-project-api\\src\\configs\\sagas\\transactionSaga.js",[],"D:\\LAT. FINAL PROJECT\\final-project-api\\src\\pages\\customer\\customerForm\\CustomerForm.js",["174","175","176","177","178","179","180","181","182","183"],"import React, {useState, useEffect} from 'react'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {findCustomerByIdAction, saveCustomerAction} from \"../../../actions/customerAction\"\r\nimport {Link, Redirect} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\"\r\nimport  {CustomInput, Button, Form, FormGroup, Input, Label, Card, CardHeader, CardBody, Col} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Container from \"../../../components/Containers/Container\";\r\nimport DropdownList from \"../../../components/DropdownList/DropdownList\";\r\nimport HeaderMaster from \"../../../components/navbar/NavbarMaster\";\r\n\r\n\r\nconst CustomerForm = ({error, isLoading, saveCustomer, saveCustomerAction, customer, findCustomerByIdAction}) => {\r\n    const {id} = useParams()\r\n    const [roles, setRoles] = useState(localStorage.getItem(\"roles\"))\r\n    const [redirect] = useState(false)\r\n    const [data, setData] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        idNumber: 0,\r\n        address: \"\",\r\n        employeeType: \"\",\r\n        contractLength: 0,\r\n        contractStart: \"\"\r\n    })\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if (id !== data.id) {\r\n            findCustomerByIdAction(id);\r\n            setData(customer)\r\n            console.log(\"ini useeffect\", customer)\r\n        }\r\n    }, [customer])\r\n\r\n    useEffect(() => {\r\n        if (saveCustomer) {\r\n            history.push('/customer')\r\n        }\r\n    }, [saveCustomer, history])\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        setData({...data, [name]: value})\r\n\r\n        console.log(\"ini handle change\", data)\r\n    }\r\n\r\n    const handleEmployee = (e) => {\r\n        setData({...data, employeeType: e})\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        saveCustomerAction(data)\r\n\r\n        console.log(\"ini handle submit\",data)\r\n    }\r\n\r\n    if (redirect === true) {\r\n        return <Redirect to=\"/customer\"/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"roles\") == \"MASTER\" ?\r\n                    <>\r\n\r\n                        <div>\r\n                            <Container error={error} />\r\n                            <HeaderMaster/>\r\n                            <div className=\"container-fluid\" style={{marginTop:\"10px\"}}>\r\n                                <h1 style={{fontSize:\"3vw\", color:\"#e42556\", margin:\"3%\", textAlign:\"center\"}}>Form Customer</h1>\r\n                                <div className=\"col-md-13\">\r\n                                    <div className=\"form form-container\">\r\n                                        {!isLoading ?\r\n                                            <Form onSubmit={handleSubmit}>\r\n                                                <FormGroup row>\r\n                                                    <Label htmlFor=\"name\" sm={2}>Customer's Name</Label>\r\n                                                    <Col sm={10}>\r\n                                                        <Input\r\n                                                            required\r\n                                                            onChange={handleChange}\r\n                                                            value={data?.name || ''}\r\n                                                            type=\"text\"\r\n                                                            name=\"name\"\r\n                                                            // id=\"email\"\r\n                                                            placeholder=\"input name\"/>\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n                                                <FormGroup row>\r\n                                                    <Label htmlFor=\"email\" sm={2}>Email</Label>\r\n                                                    <Col sm={10}>\r\n                                                        <Input\r\n                                                            required\r\n                                                            onChange={handleChange}\r\n                                                            value={data?.email || ''}\r\n                                                            type=\"email\"\r\n                                                            name=\"email\"\r\n                                                            // id=\"email\"\r\n                                                            placeholder=\"input email\"/>\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n                                                <FormGroup row>\r\n                                                    <Label htmlFor=\"idNumber\" sm={2}>ID Number</Label>\r\n                                                    <Col sm={10}>\r\n                                                        <Input\r\n                                                            required\r\n                                                            onChange={handleChange}\r\n                                                            value={data?.idNumber || ''}\r\n                                                            type=\"number\"\r\n                                                            name=\"idNumber\"\r\n                                                            // id=\"idNumber\"\r\n                                                            placeholder=\"input ID number\"/>\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n                                                <FormGroup row>\r\n                                                    <Label htmlFor=\"exampleText\" sm={2}>Address</Label>\r\n                                                    <Col sm={10}>\r\n                                                        <Input\r\n                                                            required\r\n                                                            onChange={handleChange}\r\n                                                            value={data?.address || ''}\r\n                                                            type=\"textarea\"\r\n                                                            name=\"address\"\r\n                                                            placeholder=\"address\"/>\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n                                                <FormGroup row>\r\n                                                    <Label htmlFor=\"select\" sm={2}>Type of customer</Label>\r\n                                                    <Col sm={10}>\r\n                                                        <DropdownList\r\n                                                            data={[\r\n                                                                {value: \"NON\", label: \"NON\"},\r\n                                                                {value: \"REGULAR\", label: \"REGULAR\"},\r\n                                                                {value: \"CONTRACT\", label: \"CONTRACT\"}\r\n                                                            ]}\r\n                                                            value={data?.employeeType}\r\n                                                            placeholder=\"Select Employee Type\"\r\n                                                            handleDropdown={handleEmployee}\r\n                                                        />\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n\r\n                                                {data.employeeType == \"CONTRACT\"\r\n                                                &&\r\n\r\n                                                <div>\r\n                                                    <FormGroup row>\r\n                                                        <Label for=\"contractStart\" sm={2}>Contract Start</Label>\r\n                                                        <Col sm={10}>\r\n                                                            <Input\r\n                                                                onChange={handleChange}\r\n                                                                value={data?.contractStart || ''}\r\n                                                                type=\"date\"\r\n                                                                name=\"contractStart\"\r\n                                                                id=\"contractStart\"\r\n                                                                placeholder=\"contract start\"/>\r\n                                                        </Col>\r\n                                                    </FormGroup>\r\n                                                    <FormGroup row>\r\n                                                        <Label for=\"contractLength\" sm={2}>Contract Length</Label>\r\n                                                        <Col sm={10}>\r\n                                                            <Input\r\n                                                                onChange={handleChange}\r\n                                                                value={data?.contractLength || ''}\r\n                                                                type=\"number\"\r\n                                                                name=\"contractLength\"\r\n                                                                id=\"contractLength\"\r\n                                                                placeholder=\"contract length\"/>\r\n                                                        </Col>\r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                                }\r\n                                                <FormGroup check row>\r\n                                                    <Col sm={{size: 10, offset: 2}}>\r\n                                                        <Button style={{background:\"#e42256\"}}>\r\n                                                            <FontAwesomeIcon icon={faSave}/>\r\n                                                            {id !== null ? \"  Update\" : \"  Submit\"}\r\n                                                        </Button> {' '}\r\n                                                        <Button href=\"/customer\" style={{background:\"#e42256\"}}>\r\n                                                            <FontAwesomeIcon icon={faArrowLeft}/>\r\n                                                            Cancel\r\n                                                        </Button>\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n                                            </Form> :\r\n                                            <div>Loading...</div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <div> cannot access</div>\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // call reducer\r\n        error: state.findCustomerByIdReducer.error || state.saveCustomerReducer.error,\r\n        customer: state.findCustomerByIdReducer.data,\r\n        isLoading: state.findCustomerByIdReducer.isLoading,\r\n        update: state.updateCustomerReducer,\r\n        saveCustomer: state.saveCustomerReducer.data\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {findCustomerByIdAction, saveCustomerAction}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerForm)\r\n","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\pages\\transaction\\transactionList\\TransactionList.js",["184","185","186","187"],"import {Button, Container, Table} from \"reactstrap\";\r\nimport Containers from '../../../components/Containers/Container'\r\nimport React, {useEffect} from \"react\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {findAllTransactionAction} from \"../../../actions/transactionAction\";\r\nimport TransactionRow from \"./TransactionRow\";\r\nimport HeaderMaster from \"../../../components/navbar/NavbarMaster\";\r\n\r\nfunction TransactionList({\r\n                             isLoading,\r\n                             transactions,\r\n                             error,\r\n                             findAllTransactionAction\r\n                         }) {\r\n\r\n    const onReload = () => {\r\n        findAllTransactionAction();\r\n    };\r\n\r\n    useEffect(onReload, [findAllTransactionAction])\r\n\r\n    return (\r\n        <Containers error={error}>\r\n            <HeaderMaster/>\r\n            <Container fluid style={{width:\"90%\"}}>\r\n                <div>\r\n                    <div className=\"d-flex justify-content-center mb-3\">\r\n                        <h1 style={{fontSize:\"3vw\", color:\"#e42556\", margin:\"3%\", textAlign:\"center\"}}>Transaction List</h1>\r\n                    </div>\r\n\r\n                    <Table bordered style={{marginTop: '10px'}}>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>No</th>\r\n                            <th>Name</th>\r\n                            <th>Employee Type</th>\r\n                            <th>Need Type</th>\r\n                            <th>Loan</th>\r\n                            <th>Tenor</th>\r\n                            <th>Interest Rate</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {console.log(\"TESSSST\", transactions)}\r\n                        {\r\n                            !isLoading?\r\n                                transactions?.list?.map( (e, i) => {\r\n                                    return (\r\n                                        <TransactionRow key={i} data={e} number={(transactions.page*transactions.size)+1 + i} />\r\n                                    )\r\n                                }):\r\n                                <tr>\r\n                                    <td colSpan=\"3\"> Loading..</td>\r\n                                </tr>\r\n                        }\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n\r\n            </Container>\r\n        </Containers>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        error: state.finAllTransactionReducer.error,\r\n        transactions: state.finAllTransactionReducer.data || [],\r\n        isLoading: state.finAllTransactionReducer.isLoading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    findAllTransactionAction\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionList);","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\pages\\customer\\customerList\\CustomerList.js",["188"],"import React, {useEffect} from 'react'\r\nimport CustomerRow from \"./CustomerRow\"\r\nimport {findAllCustomerAction} from '../../../actions/customerAction'\r\nimport {connect} from \"react-redux\"\r\nimport {Button, Table, Container} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Containers from \"../../../components/Containers/Container\";\r\nimport HeaderMaster from \"../../../components/navbar/NavbarMaster\";\r\n\r\nfunction CustomerList({\r\n                          error,\r\n                          isLoading,\r\n                          customers,\r\n                          findAllCustomerAction\r\n                      }) {\r\n\r\n    const onReload = () => {\r\n        findAllCustomerAction();\r\n    };\r\n\r\n    useEffect(onReload, [findAllCustomerAction])\r\n\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"roles\") == \"MASTER\" ?\r\n                    <>\r\n                        <Containers error={error}>\r\n                            <HeaderMaster/>\r\n                            <Container fluid style={{width:\"90%\"}}>\r\n                                <div>\r\n                                    <div className=\"d-flex justify-content-center mb-3\">\r\n                                        <h1 style={{fontSize:\"3vw\", color:\"#e42556\", margin:\"3%\", textAlign:\"center\"}}>Customer List</h1>\r\n                                    </div>\r\n\r\n                                    <Button href=\"/customer/form\" style={{background:\"#e42256\"}}>\r\n                                        <FontAwesomeIcon icon={faSave}/> Add\r\n                                    </Button>\r\n                                    <Table bordered style={{marginTop: '10px'}}>\r\n                                        <thead>\r\n                                        <tr>\r\n                                            <th>Number</th>\r\n                                            <th>Full Name</th>\r\n                                            <th>Id Card</th>\r\n                                            <th>Email</th>\r\n                                            {/*<th>Address</th>*/}\r\n                                            <th>Employee Type</th>\r\n                                            <th>Action</th>\r\n                                        </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n\r\n                                        {\r\n                                            !isLoading ?\r\n                                                customers?.list?.map((e, i) => {\r\n\r\n                                                    return (\r\n                                                        <CustomerRow key={i} data={e} number={(customers.page * customers.size) + 1 + i} />\r\n                                                    )\r\n                                                })\r\n                                                :\r\n                                                <tr>\r\n                                                    <td colSpan=\"3\"> Loading..</td>\r\n                                                </tr>\r\n                                        }\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </div>\r\n                            </Container>\r\n                        </Containers>\r\n                    </>\r\n                    :\r\n                    <div> cannot access</div>\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        error: state.findAllCustomerReducer.error,\r\n        customers: state.findAllCustomerReducer.data || [],\r\n        isLoading: state.findAllCustomerReducer.isLoading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    findAllCustomerAction\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerList)\r\n","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\pages\\transaction\\transactionForm\\TransactionForm.js",["189","190","191"],"import {InputGroupText, InputGroup, FormGroup, Form, Input, Label, Button, Col} from \"reactstrap\";\r\nimport Container from \"../../../components/Containers/Container\";\r\nimport {Redirect, useHistory, useParams} from 'react-router-dom'\r\nimport {saveTransactionAction} from \"../../../actions/transactionAction\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {findCustomerByIdAction} from \"../../../actions/customerAction\";\r\nimport HeaderMaster from \"../../../components/navbar/NavbarMaster\";\r\nimport DropdownList from \"../../../components/DropdownList/DropdownList\";\r\n\r\nconst TransactionForm = ({savedTransaction, isLoading, error, saveTransactionAction, customer, findCustomerByIdAction}) => {\r\n    const {id} = useParams()\r\n    const [redirect] = useState(false)\r\n    const [data, setData] = useState({\r\n        customer: \"\"\r\n    })\r\n    const history = useHistory()\r\n\r\n    const handleCustomer = () => {\r\n        setData({\r\n            ...data,\r\n            customer: customer.id\r\n        })\r\n    }\r\n\r\n    const handleNeed = (e) => {\r\n        setData({...data, needType: e})\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (id !== data.customer) {\r\n            findCustomerByIdAction(id);\r\n            setData({\r\n                ...data,\r\n                customer: id\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(`CUSTOMER `, customer, `DATA `, data)\r\n    }, [data])\r\n\r\n    useEffect(() => {\r\n        if (savedTransaction) {\r\n            history.push('/master/transaction')\r\n        }\r\n    }, [savedTransaction, history])\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        setData({...data, [name]: value})\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        saveTransactionAction(data)\r\n        console.log(data)\r\n    }\r\n    if (redirect === true) {\r\n        return <Redirect to='/transaction'/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container error={error}/>\r\n            <HeaderMaster/>\r\n            <div className=\"container\" style={{marginTop: \"10px\"}}>\r\n                <h1 style={{fontSize: \"3vw\", color: \"#e42556\", margin: \"3%\", textAlign: \"center\"}}>Form Transaction</h1>\r\n                <div className=\"col-md-13\">\r\n                    <div className=\"form form-container\">\r\n                        {!isLoading ?\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <FormGroup row>\r\n                                    <Label for=\"notes\" sm={2}>Note</Label>\r\n                                    <Col sm={10}>\r\n                                        <Input\r\n                                            required\r\n                                            onChange={handleChange}\r\n                                            value={data?.notes || ''}\r\n                                            type=\"text\"\r\n                                            name=\"notes\"\r\n                                            id=\"notes\"\r\n                                            placeholder=\"input note\"/>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label for=\"income\" sm={2}>Income</Label>\r\n                                    <Col sm={10}>\r\n                                        <InputGroup>\r\n                                            <InputGroupText>Rp</InputGroupText>\r\n                                            <Input required\r\n                                                   name=\"income\"\r\n                                                   onChange={handleChange}\r\n                                                   value={data?.income || ''}\r\n                                                   placeholder=\"income\"\r\n                                                   type=\"number\"/>\r\n                                            <InputGroupText>.00</InputGroupText>\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label for=\"outcome\" sm={2}>Outcome</Label>\r\n                                    <Col sm={10}>\r\n                                        <InputGroup>\r\n                                            <InputGroupText>Rp</InputGroupText>\r\n                                            <Input required\r\n                                                   name=\"outcome\"\r\n                                                   onChange={handleChange}\r\n                                                   value={data?.outcome || ''}\r\n                                                   placeholder=\"outcome\"\r\n                                                   type=\"number\"/>\r\n                                            <InputGroupText>.00</InputGroupText>\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label for=\"loan\" sm={2}>Loan</Label>\r\n                                    <Col sm={10}>\r\n                                        <InputGroup>\r\n                                            <InputGroupText>Rp</InputGroupText>\r\n                                            <Input required\r\n                                                   onChange={handleChange}\r\n                                                   value={data?.loan || ''}\r\n                                                   placeholder=\"loan\"\r\n                                                   type=\"number\"\r\n                                                   name=\"loan\"/>\r\n                                            <InputGroupText>.00</InputGroupText>\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label htmlFor=\"tenor\" sm={2}>Tenor</Label>\r\n                                    <Col sm={10}>\r\n                                        <Input required\r\n                                               onChange={handleChange}\r\n                                               type=\"number\"\r\n                                               value={data?.tenor || ''}\r\n                                               name=\"tenor\"\r\n                                               placeholder=\"tenor\"/>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label for=\"interestRate\" sm={2}>Interest Rate</Label>\r\n                                    <Col sm={10}>\r\n                                        <InputGroup>\r\n                                            <Input\r\n                                                required\r\n                                                onChange={handleChange}\r\n                                                name=\"interestRate\"\r\n                                                value={data?.interestRate || ''}\r\n                                                placeholder=\"interest rate\" min={0} max={100} type=\"number\" step=\"1\"/>\r\n                                            <InputGroupText>%</InputGroupText>\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label for=\"select\" sm={2}>Need Type</Label>\r\n                                    <Col sm={10}>\r\n                                        <DropdownList\r\n                                            data={[\r\n                                                {value: \"CAPITAL\", label: \"CAPITAL\"},\r\n                                                {value: \"CONSUMPTIVE\", label: \"CONSUMPTIVE\"},\r\n                                                {value: \"INVESTMENT\", label: \"INVESTMENT\"}\r\n                                            ]}\r\n                                            value={data?.needType}\r\n                                            placeholder=\"Select Need Type\"\r\n                                            handleDropdown={handleNeed}\r\n                                        />\r\n                                    </Col>\r\n                                </FormGroup>\r\n                            <FormGroup check row>\r\n                                    <Col sm={{size: 10, offset: 2}}>\r\n                                        <Button style={{background: \"#e42256\"}}>\r\n                                            <FontAwesomeIcon icon={faSave}/>\r\n                                            {id > 0 ? \"  Update\" : \"  Submit\"}\r\n                                        </Button> {' '}\r\n                                        <Button href=\"/customer\" style={{background: \"#e42256\"}}>\r\n                                            <FontAwesomeIcon icon={faArrowLeft}/>\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                            </Form> :\r\n                            <div>Loading...</div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        customer: state.findCustomerByIdReducer.data,\r\n        savedTransaction: state.saveTransactionReducer.data,\r\n        isLoading: state.saveTransactionReducer.isLoading,\r\n        error: state.saveTransactionReducer.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {findCustomerByIdAction, saveTransactionAction}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionForm)","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\configs\\api.js",[],"D:\\LAT. FINAL PROJECT\\final-project-api\\src\\actions\\customerAction.js",[],"D:\\LAT. FINAL PROJECT\\final-project-api\\src\\configs\\constants\\actions.js",[],"D:\\LAT. FINAL PROJECT\\final-project-api\\src\\pages\\transaction\\transactionList\\TransactionRow.js",[],"D:\\LAT. FINAL PROJECT\\final-project-api\\src\\components\\DropdownList\\DropdownList.js",[],"D:\\LAT. FINAL PROJECT\\final-project-api\\src\\components\\Containers\\Container.js",[],"D:\\LAT. FINAL PROJECT\\final-project-api\\src\\actions\\transactionAction.js",[],"D:\\LAT. FINAL PROJECT\\final-project-api\\src\\pages\\customer\\customerList\\CustomerRow.js",["192","193"],"import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Button} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faHandshake, faInfoCircle, faPencilAlt, faSave, faTrash} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst CustomerRow = ({data, onUpdate, number}) => {\r\n    return (\r\n        <tr>\r\n            <td>{number}</td>\r\n            <td>{data.name}</td>\r\n            <td>{data.idNumber} </td>\r\n            <td>{data.email}</td>\r\n            {/*<td>{data.address}</td>*/}\r\n            <td>{data.employeeType}</td>\r\n            <td>\r\n                <Button href={`/customer/detail/${data.id}`} style={{background:\"#e42256\"}}>\r\n                    <FontAwesomeIcon icon={faInfoCircle}/>\r\n                </Button>{' '}\r\n                <Button onClick={onUpdate} href={`/customer/${data.id}/edit`} style={{background:\"#e42256\"}}>\r\n                    <FontAwesomeIcon icon={faPencilAlt}/>\r\n                </Button>{' '}\r\n                <Button href={`/transaction/form/${data.id}`} style={{background:\"#e42256\"}}>\r\n                    <FontAwesomeIcon icon={faHandshake}/>\r\n                </Button>{' '}\r\n                <Button style={{background:\"#e42256\"}}>\r\n                    <FontAwesomeIcon icon={faTrash}/>\r\n                </Button>{' '}\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default CustomerRow;\r\n","D:\\LAT. FINAL PROJECT\\final-project-api\\src\\components\\Containers\\index.js",[],"D:\\LAT. FINAL PROJECT\\final-project-api\\src\\configs\\sagas\\loginSaga.js",[],"D:\\LAT. FINAL PROJECT\\final-project-api\\src\\configs\\reducers\\loginReducer.js",[],"D:\\LAT. FINAL PROJECT\\final-project-api\\src\\actions\\loginAction.js",[],{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":65,"column":8,"nodeType":"200","endLine":65,"endColumn":26,"suggestions":"201"},{"ruleId":"202","severity":1,"message":"203","line":177,"column":37,"nodeType":"204","endLine":177,"endColumn":79},{"ruleId":"205","severity":1,"message":"206","line":14,"column":8,"nodeType":"207","messageId":"208","endLine":14,"endColumn":12},{"ruleId":"205","severity":1,"message":"209","line":36,"column":19,"nodeType":"207","messageId":"208","endLine":36,"endColumn":23},{"ruleId":"205","severity":1,"message":"210","line":57,"column":13,"nodeType":"207","messageId":"208","endLine":57,"endColumn":26},{"ruleId":"205","severity":1,"message":"211","line":60,"column":13,"nodeType":"207","messageId":"208","endLine":60,"endColumn":26},{"ruleId":"205","severity":1,"message":"212","line":63,"column":13,"nodeType":"207","messageId":"208","endLine":63,"endColumn":23},{"ruleId":"205","severity":1,"message":"213","line":66,"column":13,"nodeType":"207","messageId":"208","endLine":66,"endColumn":26},{"ruleId":"205","severity":1,"message":"214","line":69,"column":13,"nodeType":"207","messageId":"208","endLine":69,"endColumn":22},{"ruleId":"205","severity":1,"message":"215","line":72,"column":13,"nodeType":"207","messageId":"208","endLine":72,"endColumn":32},{"ruleId":"205","severity":1,"message":"216","line":112,"column":11,"nodeType":"207","messageId":"208","endLine":112,"endColumn":36},{"ruleId":"217","severity":1,"message":"218","line":16,"column":51,"nodeType":"219","messageId":"220","endLine":16,"endColumn":53},{"ruleId":"221","severity":1,"message":"222","line":31,"column":45,"nodeType":"204","endLine":32,"endColumn":80},{"ruleId":"205","severity":1,"message":"223","line":4,"column":9,"nodeType":"207","messageId":"208","endLine":4,"endColumn":13},{"ruleId":"205","severity":1,"message":"224","line":6,"column":10,"nodeType":"207","messageId":"208","endLine":6,"endColumn":21},{"ruleId":"205","severity":1,"message":"225","line":6,"column":62,"nodeType":"207","messageId":"208","endLine":6,"endColumn":66},{"ruleId":"205","severity":1,"message":"226","line":6,"column":68,"nodeType":"207","messageId":"208","endLine":6,"endColumn":78},{"ruleId":"205","severity":1,"message":"227","line":6,"column":80,"nodeType":"207","messageId":"208","endLine":6,"endColumn":88},{"ruleId":"205","severity":1,"message":"228","line":16,"column":12,"nodeType":"207","messageId":"208","endLine":16,"endColumn":17},{"ruleId":"205","severity":1,"message":"229","line":16,"column":19,"nodeType":"207","messageId":"208","endLine":16,"endColumn":27},{"ruleId":"198","severity":1,"message":"230","line":35,"column":8,"nodeType":"200","endLine":35,"endColumn":18,"suggestions":"231"},{"ruleId":"217","severity":1,"message":"218","line":69,"column":47,"nodeType":"219","messageId":"220","endLine":69,"endColumn":49},{"ruleId":"217","severity":1,"message":"218","line":148,"column":68,"nodeType":"219","messageId":"220","endLine":148,"endColumn":70},{"ruleId":"205","severity":1,"message":"232","line":1,"column":9,"nodeType":"207","messageId":"208","endLine":1,"endColumn":15},{"ruleId":"205","severity":1,"message":"233","line":4,"column":9,"nodeType":"207","messageId":"208","endLine":4,"endColumn":24},{"ruleId":"205","severity":1,"message":"234","line":5,"column":9,"nodeType":"207","messageId":"208","endLine":5,"endColumn":15},{"ruleId":"205","severity":1,"message":"223","line":6,"column":9,"nodeType":"207","messageId":"208","endLine":6,"endColumn":13},{"ruleId":"217","severity":1,"message":"218","line":28,"column":47,"nodeType":"219","messageId":"220","endLine":28,"endColumn":49},{"ruleId":"205","severity":1,"message":"235","line":19,"column":11,"nodeType":"207","messageId":"208","endLine":19,"endColumn":25},{"ruleId":"198","severity":1,"message":"236","line":34,"column":8,"nodeType":"200","endLine":34,"endColumn":10,"suggestions":"237"},{"ruleId":"198","severity":1,"message":"238","line":38,"column":8,"nodeType":"200","endLine":38,"endColumn":14,"suggestions":"239"},{"ruleId":"205","severity":1,"message":"223","line":2,"column":9,"nodeType":"207","messageId":"208","endLine":2,"endColumn":13},{"ruleId":"205","severity":1,"message":"234","line":5,"column":49,"nodeType":"207","messageId":"208","endLine":5,"endColumn":55},"no-native-reassign",["240"],"no-negated-in-lhs",["241"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["242"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'swal' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'fullNameError' is assigned a value but never used.","'usernameError' is assigned a value but never used.","'emailError' is assigned a value but never used.","'passwordError' is assigned a value but never used.","'roleError' is assigned a value but never used.","'profilePictureError' is assigned a value but never used.","'handleProfilPictureChange' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Link' is defined but never used.","'CustomInput' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardBody' is defined but never used.","'roles' is assigned a value but never used.","'setRoles' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data.id', 'findCustomerByIdAction', and 'id'. Either include them or remove the dependency array. If 'findCustomerByIdAction' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["243"],"'Button' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faSave' is defined but never used.","'handleCustomer' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data', 'findCustomerByIdAction', and 'id'. Either include them or remove the dependency array. If 'findCustomerByIdAction' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["244"],"React Hook useEffect has a missing dependency: 'customer'. Either include it or remove the dependency array.",["245"],"no-global-assign","no-unsafe-negation",{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},"Update the dependencies array to be: [loginData, error, history]",{"range":"254","text":"255"},"Update the dependencies array to be: [customer, data.id, findCustomerByIdAction, id]",{"range":"256","text":"257"},"Update the dependencies array to be: [data, findCustomerByIdAction, id]",{"range":"258","text":"259"},"Update the dependencies array to be: [customer, data]",{"range":"260","text":"261"},[2152,2170],"[loginData, error, history]",[1452,1462],"[customer, data.id, findCustomerByIdAction, id]",[1247,1249],"[data, findCustomerByIdAction, id]",[1343,1349],"[customer, data]"]