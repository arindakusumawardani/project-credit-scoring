[{"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\index.js":"1","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\App.js":"2","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\reportWebVitals.js":"3","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\configs\\store.js":"4","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\configs\\routes.js":"5","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\login\\SignIn.js":"6","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\home\\HomeMaster.js":"7","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\actions\\loginAction.js":"8","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\configs\\reducers\\index.js":"9","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\configs\\sagas\\index.js":"10","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\transaction\\transactionList\\index.js":"11","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\customer\\customerList\\index.js":"12","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\customer\\customerForm\\index.js":"13","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\transaction\\transactionForm\\index.js":"14","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\components\\navbar\\NavbarAdmin.js":"15","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\components\\navbar\\NavbarMaster.js":"16","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\home\\card\\CardboxMaster.js":"17","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\configs\\constants\\actions.js":"18","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\configs\\reducers\\customerReducer.js":"19","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\configs\\sagas\\customerSaga.js":"20","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\configs\\sagas\\transactionSaga.js":"21","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\configs\\reducers\\transactionReducer.js":"22","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\configs\\reducers\\loginReducer.js":"23","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\configs\\sagas\\loginSaga.js":"24","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\transaction\\transactionList\\TransactionList.js":"25","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\customer\\customerForm\\CustomerForm.js":"26","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\customer\\customerList\\CustomerList.js":"27","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\transaction\\transactionForm\\TransactionForm.js":"28","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\configs\\api.js":"29","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\transaction\\transactionList\\TransactionRow.js":"30","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\actions\\customerAction.js":"31","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\components\\DropdownList\\DropdownList.js":"32","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\components\\Containers\\Container.js":"33","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\actions\\transactionAction.js":"34","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\customer\\customerList\\CustomerRow.js":"35","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\customer\\CustomerDetail.js":"36","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\login\\SignUpForm\\SignUp.js":"37","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\login\\signUpForm\\SignUp.js":"38","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\login\\accountList\\AccountList.js":"39","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\configs\\sagas\\signupSaga.js":"40","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\login\\accountList\\AccountRow.js":"41","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\configs\\reducers\\signupReducer.js":"42","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\actions\\signupAction.js":"43"},{"size":569,"mtime":1616136800093,"results":"44","hashOfConfig":"45"},{"size":889,"mtime":1616136800067,"results":"46","hashOfConfig":"45"},{"size":375,"mtime":1616136800111,"results":"47","hashOfConfig":"45"},{"size":349,"mtime":1616136800091,"results":"48","hashOfConfig":"45"},{"size":1772,"mtime":1616270275754,"results":"49","hashOfConfig":"45"},{"size":8305,"mtime":1616229503736,"results":"50","hashOfConfig":"45"},{"size":2284,"mtime":1616216230294,"results":"51","hashOfConfig":"45"},{"size":191,"mtime":1616255211225,"results":"52","hashOfConfig":"45"},{"size":1065,"mtime":1616271558969,"results":"53","hashOfConfig":"45"},{"size":998,"mtime":1616271559047,"results":"54","hashOfConfig":"45"},{"size":41,"mtime":1616136800111,"results":"55","hashOfConfig":"45"},{"size":38,"mtime":1616136800099,"results":"56","hashOfConfig":"45"},{"size":38,"mtime":1616136800097,"results":"57","hashOfConfig":"45"},{"size":41,"mtime":1616136800109,"results":"58","hashOfConfig":"45"},{"size":4236,"mtime":1616136800081,"results":"59","hashOfConfig":"45"},{"size":3650,"mtime":1616221094375,"results":"60","hashOfConfig":"45"},{"size":2727,"mtime":1616136800102,"results":"61","hashOfConfig":"45"},{"size":2909,"mtime":1616268469787,"results":"62","hashOfConfig":"45"},{"size":3082,"mtime":1616210469065,"results":"63","hashOfConfig":"45"},{"size":2287,"mtime":1616255211318,"results":"64","hashOfConfig":"45"},{"size":2890,"mtime":1616136800091,"results":"65","hashOfConfig":"45"},{"size":3676,"mtime":1616136800088,"results":"66","hashOfConfig":"45"},{"size":898,"mtime":1616141204639,"results":"67","hashOfConfig":"45"},{"size":898,"mtime":1616146308424,"results":"68","hashOfConfig":"45"},{"size":3078,"mtime":1616136800109,"results":"69","hashOfConfig":"45"},{"size":16161,"mtime":1616232418213,"results":"70","hashOfConfig":"45"},{"size":4050,"mtime":1616232418184,"results":"71","hashOfConfig":"45"},{"size":10539,"mtime":1616295316192,"results":"72","hashOfConfig":"45"},{"size":636,"mtime":1616213395881,"results":"73","hashOfConfig":"45"},{"size":860,"mtime":1616222914424,"results":"74","hashOfConfig":"45"},{"size":581,"mtime":1616137310113,"results":"75","hashOfConfig":"45"},{"size":822,"mtime":1616136800081,"results":"76","hashOfConfig":"45"},{"size":495,"mtime":1616136800079,"results":"77","hashOfConfig":"45"},{"size":620,"mtime":1616136800068,"results":"78","hashOfConfig":"45"},{"size":1268,"mtime":1616222914352,"results":"79","hashOfConfig":"45"},{"size":4288,"mtime":1616242553124,"results":"80","hashOfConfig":"45"},{"size":13357,"mtime":1616244354055,"results":"81","hashOfConfig":"45"},{"size":12569,"mtime":1616301633374,"results":"82","hashOfConfig":"45"},{"size":4585,"mtime":1616296662050,"results":"83","hashOfConfig":"45"},{"size":3048,"mtime":1616302044008,"results":"84","hashOfConfig":"45"},{"size":1251,"mtime":1616296716091,"results":"85","hashOfConfig":"45"},{"size":3604,"mtime":1616296989606,"results":"86","hashOfConfig":"45"},{"size":741,"mtime":1616268469724,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"fg16rk",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"90"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"90"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"90"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\index.js",[],["184","185"],"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\App.js",[],"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\reportWebVitals.js",[],"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\configs\\store.js",[],"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\configs\\routes.js",[],"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\login\\SignIn.js",["186","187"],"import React, {useEffect, useState} from \"react\";\r\nimport {faKey, faUser} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {Button} from \"reactstrap\";\r\nimport undraw_Access_account_re_8spm from \"../../assets/images/undraw_Access_account_re_8spm.svg\"\r\nimport \"./login.css\"\r\nimport {useHistory} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginRequestAction} from \"../../actions/loginAction\";\r\n\r\nconst SignIn = ({loginData, isLoading, error, dispatchLoginAction}) => {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [usernameError, setUsernameError] = useState('');\r\n    const [passwordError, setPasswordError] = useState('');\r\n\r\n    const [validation, setValidation] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const onSubmit = () => {\r\n        const isValid = validate();\r\n\r\n        if (isValid) {\r\n            const data = {\r\n                username: username,\r\n                password: password\r\n            }\r\n            console.log(\"ini data\", data)\r\n            dispatchLoginAction(data)\r\n\r\n            //axios\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // jika login sukses\r\n        if (loginData) {\r\n            localStorage.setItem('token', loginData.token)\r\n            localStorage.setItem('roles', loginData.roles)\r\n            localStorage.setItem('username', loginData.username)\r\n            console.log(\"sukses login\", loginData)\r\n\r\n            //pilih role\r\n            if (loginData.roles === \"MASTER\") {\r\n                history.push('/master/home')\r\n            } else if (loginData.roles === \"STAFF\") {\r\n                history.push('/master/home')\r\n            } else {\r\n                setValidation(\"*Supervisor not allow sign here\")\r\n            }\r\n            console.log(\"ini role\", loginData.roles)\r\n\r\n            // sweetAlert(\"Login Success!\", \"\", \"success\");\r\n            // history.push('/master/home')\r\n        }\r\n        // jika login error\r\n        if (error) {\r\n            setValidation(\"*Username or Password invalid!\")\r\n            // swal(\"Login Error!\", \"\", \"error\");\r\n        }\r\n\r\n    }, [loginData, error])\r\n\r\n    useEffect(() => {\r\n        setValidation(\"\")\r\n        setUsernameError(\"\")\r\n        setPasswordError(\"\")\r\n    }, [username, password])\r\n\r\n    const validate = () => {\r\n        //var kosong, agar bisa di update isinya\r\n        let usernameError = \"\";\r\n        let passwordError = \"\";\r\n\r\n        if (!username) {\r\n            usernameError = \"*please enter username\"\r\n        }\r\n        if (!password) {\r\n            passwordError = \"*please enter password\"\r\n        }\r\n        if (usernameError || passwordError) {\r\n            setUsernameError(usernameError);\r\n            setPasswordError(passwordError);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const handleUsernameChange = (e) => {\r\n        const inputValue = e.target.value;\r\n        const isEmpty = inputValue === \"\";\r\n        setUsername(inputValue)\r\n        setUsernameError(isEmpty)\r\n    }\r\n\r\n    const handlePasswordChange = (e) => {\r\n        const inputValue = e.target.value;\r\n        const isEmpty = inputValue === \"\";\r\n        setPassword(inputValue)\r\n        setPasswordError(isEmpty)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-center\">\r\n                <div className=\"col-md-5 pr-lg-5 mb-md-0\">\r\n                    <div>\r\n                        <img src={undraw_Access_account_re_8spm} alt=\"\"\r\n                             className=\"img-fluid d-none d-md-block\"/>\r\n                             <br/>\r\n                        <p className=\"text-muted font-weight-bold\">\r\n                            Have not account yet?\r\n                            <a href=\"/register\" className=\"text-primary ml-2\">Sign Up</a>\r\n                        </p>\r\n                        <hr/>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"col-md-7 col-lg-6 ml-auto\">\r\n                    <h1 style={{color: \"#e42256\", fontSize: \"55px\"}}>Sign In</h1><br/>\r\n                    <form>\r\n                        <div className=\"row\">\r\n\r\n                            <div className=\"input-group col-lg-12 mb-4\">\r\n                                <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faUser}/>\r\n                                        </span>\r\n                                </div>\r\n                                <input id=\"username\"\r\n                                       type=\"text\"\r\n                                       name=\"username\"\r\n                                       placeholder=\"Username\"\r\n                                       onChange={(e) => handleUsernameChange(e)}\r\n                                       value={username}\r\n                                       className=\"form-control bg-white border-left-0 border-md\"/>\r\n                            </div>\r\n                            <div style={{\r\n                                marginLeft: \"20px\",\r\n                                marginTop: \"-25px\",\r\n                                marginBottom: \"20px\",\r\n                                color: \"red\"\r\n                            }}>\r\n                                {usernameError}\r\n                            </div>\r\n\r\n                            <div className=\"input-group col-lg-12 mb-4\">\r\n                                <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faKey}/>\r\n                                        </span>\r\n                                </div>\r\n                                <input id=\"password\"\r\n                                       type=\"password\"\r\n                                       name=\"password\"\r\n                                       placeholder=\"Password\"\r\n                                       onChange={(e) => handlePasswordChange(e)}\r\n                                       className=\"form-control bg-white border-left-0 border-md\"/>\r\n                            </div>\r\n                            <div style={{\r\n                                marginLeft: \"20px\",\r\n                                marginTop: \"-25px\",\r\n                                marginBottom: \"20px\",\r\n                                color: \"red\"\r\n                            }}>{passwordError}</div>\r\n\r\n                            <div className=\"form-group col-lg-12 mx-auto mb-0\">\r\n                                <div style={{fontSize: 12, color: \"red\"}}>{validation}</div>\r\n                                <Button\r\n                                    style={{background: \"#e42256\"}}\r\n                                    onClick={() => onSubmit()}\r\n                                    block>\r\n                                        <span className=\"font-weight-bold\"\r\n                                              style={{color: \"#ffff\"}}>SIGN IN</span>\r\n                                </Button>\r\n                            </div>\r\n                            <div className=\"text-center w-100\">\r\n                                <br/>\r\n                                <p className=\"text-muted font-weight-bold\">\r\n                                    Forgot Password?\r\n                                    <a href=\"#\" className=\"text-primary ml-2\">Click here</a>\r\n                                </p>\r\n                                <hr/>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loginData: state.loginReducer.data,\r\n        isLoading: state.loginReducer.isLoading,\r\n        error: state.loginReducer.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    dispatchLoginAction: loginRequestAction\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\home\\HomeMaster.js",["188","189"],"import React, {Component} from \"react\";\r\nimport CardboxMaster from \"./card/CardboxMaster\";\r\nimport {Row, Button, Jumbotron, Col} from \"reactstrap\";\r\nimport './home.css';\r\nimport Image from \"../../assets/images/undraw_Code_thinking_re_gka2.svg\"\r\nimport HeaderMaster from \"../../components/navbar/NavbarMaster\";\r\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nclass HomeMaster extends Component {\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                {\r\n                    localStorage.getItem(\"roles\") == \"MASTER\" ?\r\n                        <>\r\n                            <HeaderMaster/>\r\n                            <div className=\"jumbotron\">\r\n                                <Jumbotron className=\"jumbotron-fluid\" style={{height: \"30vh\"}}>\r\n                                    <Row style={{marginTop: \"-5%\"}}>\r\n                                        <Col>\r\n                                            <h1 style={{color: \"#e42256\", fontSize: \"5vw\", marginLeft: \"15%\"}}>\r\n                                                Hello, {localStorage.getItem('fullName')}!</h1>\r\n                                            <p style={{fontSize: \"2vw\", marginLeft: \"15%\"}}>What do you want to do?</p>\r\n                                            <Button href=\"/register\"\r\n                                                    style={{background: \"#e42256\", marginLeft: \"15%\", marginTop: \"5%\"}}><FontAwesomeIcon\r\n                                                icon={faPlus}/> New Account</Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <img src={Image} alt=\"image\" className=\"img-fluid float-right\"\r\n                                                 style={{marginRight: \"15%\"}}/>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Jumbotron>\r\n                            </div>\r\n                            <CardboxMaster/>\r\n                        </>\r\n                        :\r\n                        <div> cannot access</div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomeMaster;","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\actions\\loginAction.js",[],"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\configs\\reducers\\index.js",[],"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\configs\\sagas\\index.js",[],"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\transaction\\transactionList\\index.js",[],"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\customer\\customerList\\index.js",[],"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\customer\\customerForm\\index.js",[],"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\transaction\\transactionForm\\index.js",[],"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\components\\navbar\\NavbarAdmin.js",[],["190","191"],"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\components\\navbar\\NavbarMaster.js",[],"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\home\\card\\CardboxMaster.js",[],"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\configs\\constants\\actions.js",[],"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\configs\\reducers\\customerReducer.js",[],"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\configs\\sagas\\customerSaga.js",[],"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\configs\\sagas\\transactionSaga.js",[],"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\configs\\reducers\\transactionReducer.js",[],"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\configs\\reducers\\loginReducer.js",[],"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\configs\\sagas\\loginSaga.js",[],"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\transaction\\transactionList\\TransactionList.js",["192","193","194","195"],"import {Button, Container, Table} from \"reactstrap\";\r\nimport Containers from '../../../components/Containers/Container'\r\nimport React, {useEffect} from \"react\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {findAllTransactionAction} from \"../../../actions/transactionAction\";\r\nimport TransactionRow from \"./TransactionRow\";\r\nimport HeaderMaster from \"../../../components/navbar/NavbarMaster\";\r\n\r\nfunction TransactionList({\r\n                             isLoading,\r\n                             transactions,\r\n                             error,\r\n                             findAllTransactionAction\r\n                         }) {\r\n\r\n    const onReload = () => {\r\n        findAllTransactionAction();\r\n    };\r\n\r\n    useEffect(onReload, [findAllTransactionAction])\r\n\r\n    return (\r\n        <Containers error={error}>\r\n            <HeaderMaster/>\r\n            <Container fluid style={{width:\"90%\"}}>\r\n                <div>\r\n                    <div className=\"d-flex justify-content-center mb-3\">\r\n                        <h1 style={{fontSize:\"3vw\", color:\"#e42556\", margin:\"3%\", textAlign:\"center\"}}>Transaction List</h1>\r\n                    </div>\r\n\r\n                    <Table bordered style={{marginTop: '10px'}}>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>No</th>\r\n                            <th>Name</th>\r\n                            <th>Employee Type</th>\r\n                            <th>Need Type</th>\r\n                            <th>Loan</th>\r\n                            <th>Tenor</th>\r\n                            <th>Interest Rate</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {console.log(\"TESSSST\", transactions)}\r\n                        {\r\n                            !isLoading?\r\n                                transactions?.list?.map( (e, i) => {\r\n                                    return (\r\n                                        <TransactionRow key={i} data={e} number={(transactions.page*transactions.size)+1 + i} />\r\n                                    )\r\n                                }):\r\n                                <tr>\r\n                                    <td colSpan=\"3\"> Loading..</td>\r\n                                </tr>\r\n                        }\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n\r\n            </Container>\r\n        </Containers>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        error: state.finAllTransactionReducer.error,\r\n        transactions: state.finAllTransactionReducer.data || [],\r\n        isLoading: state.finAllTransactionReducer.isLoading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    findAllTransactionAction\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionList);","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\customer\\customerForm\\CustomerForm.js",["196","197","198","199","200","201","202","203","204","205","206","207","208","209","210"],"import React, {useState, useEffect} from 'react'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {findCustomerByIdAction, saveCustomerAction} from \"../../../actions/customerAction\"\r\nimport {Link, Redirect} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\"\r\nimport  {CustomInput, Button, Form, FormGroup, Input, Label, Card, CardHeader, CardBody, Col} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Container from \"../../../components/Containers/Container\";\r\nimport DropdownList from \"../../../components/DropdownList/DropdownList\";\r\nimport HeaderMaster from \"../../../components/navbar/NavbarMaster\";\r\n\r\n\r\nconst CustomerForm = ({error, isLoading, saveCustomer, saveCustomerAction, customer, findCustomerByIdAction}) => {\r\n    const {id} = useParams()\r\n    const [roles, setRoles] = useState(localStorage.getItem(\"roles\"))\r\n    const [redirect] = useState(false)\r\n    const [photo, setPhoto] = useState({\r\n        profilePhoto: {},\r\n        idPhoto: {}\r\n    })\r\n    const [data, setData] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        idNumber: 0,\r\n        address: \"\",\r\n        employeeType: \"\",\r\n        contractLength: \"\",\r\n        contractStart: \"\",\r\n        idPhoto: \"\",\r\n        profilePhoto: \"\"\r\n    })\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if (id !== data.id) {\r\n            findCustomerByIdAction(id);\r\n            setData(customer)\r\n            console.log(\"ini useeffect\", customer)\r\n        }\r\n    }, [customer])\r\n\r\n    useEffect(() => {\r\n        if (saveCustomer) {\r\n            history.push('/customer')\r\n        }\r\n    }, [saveCustomer, history])\r\n\r\n    const handlePhoto = async (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.files[0]\r\n        setPhoto( {...photo, [name]: value})\r\n\r\n        const formData = new FormData()\r\n        formData.append(\"file\", value)\r\n        formData.append(\"upload_preset\", \"ve2u0qv8\")\r\n\r\n        const response = await fetch(\"https://api.cloudinary.com/v1_1/nielnaga/image/upload\", {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            body: formData // body data type must match \"Content-Type\" header\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                console.log(res.url)\r\n                setData({\r\n                    ...data,\r\n                    [name] : res.url\r\n                })\r\n            })\r\n    }\r\n\r\n    const uploadIdPhoto = async () => {\r\n        const formData = new FormData()\r\n        formData.append(\"file\", photo.idPhoto)\r\n        formData.append(\"upload_preset\", \"ve2u0qv8\")\r\n\r\n        const response = await fetch(\"https://api.cloudinary.com/v1_1/nielnaga/image/upload\", {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            body: formData // body data type must match \"Content-Type\" header\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                console.log(res.url)\r\n                setData({\r\n                    ...data,\r\n                    idPhoto : res.url\r\n                })\r\n            })\r\n    }\r\n\r\n\r\n    const uploadProfilePhoto = async () => {\r\n        const formData = new FormData()\r\n        formData.append(\"file\", photo.profilePhoto)\r\n        formData.append(\"upload_preset\", \"ve2u0qv8\")\r\n\r\n        const response = await fetch(\"https://api.cloudinary.com/v1_1/nielnaga/image/upload\", {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            body: formData // body data type must match \"Content-Type\" header\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                console.log(res.url)\r\n                setData({\r\n                    ...data,\r\n                    profilePhoto : res.url\r\n                })\r\n            })\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        setData({...data, [name]: value})\r\n\r\n        console.log(\"ini handle change\", data)\r\n    }\r\n\r\n    const handleEmployee = (e) => {\r\n        setData({...data, employeeType: e})\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        saveCustomerAction(data)\r\n\r\n        console.log(\"ini handle submit\",data)\r\n    }\r\n\r\n    if (redirect === true) {\r\n        return <Redirect to=\"/customer\"/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"roles\") == \"MASTER\" ?\r\n                    <>\r\n\r\n                        <div>\r\n                            <Container error={error} />\r\n                            <HeaderMaster/>\r\n                            <div className=\"container-fluid\" style={{marginTop:\"10px\"}}>\r\n                                <h1 style={{fontSize:\"3vw\", color:\"#e42556\", margin:\"3%\", textAlign:\"center\"}}>Form Customer</h1>\r\n                                <div className=\"col-md-13\">\r\n                                    <div className=\"form form-container\">\r\n                                        {!isLoading ?\r\n                                            <Form onSubmit={handleSubmit}>\r\n                                                <FormGroup row>\r\n                                                    <Label htmlFor=\"name\" sm={2}>Customer's Name</Label>\r\n                                                    <Col sm={10}>\r\n                                                        <Input\r\n                                                            required\r\n                                                            onChange={handleChange}\r\n                                                            value={data?.name || ''}\r\n                                                            type=\"text\"\r\n                                                            name=\"name\"\r\n                                                            // id=\"email\"\r\n                                                            placeholder=\"input name\"/>\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n                                                <FormGroup row>\r\n                                                    <Label htmlFor=\"email\" sm={2}>Email</Label>\r\n                                                    <Col sm={10}>\r\n                                                        <Input\r\n                                                            required\r\n                                                            onChange={handleChange}\r\n                                                            value={data?.email || ''}\r\n                                                            type=\"email\"\r\n                                                            name=\"email\"\r\n                                                            // id=\"email\"\r\n                                                            placeholder=\"input email\"/>\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n                                                <FormGroup row>\r\n                                                    <Label htmlFor=\"idNumber\" sm={2}>ID Number</Label>\r\n                                                    <Col sm={10}>\r\n                                                        <Input\r\n                                                            required\r\n                                                            onChange={handleChange}\r\n                                                            value={data?.idNumber || ''}\r\n                                                            type=\"number\"  min=\"0\"\r\n                                                            name=\"idNumber\"\r\n                                                            // id=\"idNumber\"\r\n                                                            placeholder=\"input ID number\"/>\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n                                                <FormGroup row>\r\n                                                    <Label htmlFor=\"exampleText\" sm={2}>Address</Label>\r\n                                                    <Col sm={10}>\r\n                                                        <Input\r\n                                                            required\r\n                                                            onChange={handleChange}\r\n                                                            value={data?.address || ''}\r\n                                                            type=\"textarea\"\r\n                                                            name=\"address\"\r\n                                                            placeholder=\"address\"/>\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n                                                <FormGroup row>\r\n                                                    <Label htmlFor=\"select\" sm={2}>Type of customer</Label>\r\n                                                    <Col sm={10}>\r\n                                                        <DropdownList\r\n                                                            data={[\r\n                                                                {value: \"NON\", label: \"NON\"},\r\n                                                                {value: \"REGULAR\", label: \"REGULAR\"},\r\n                                                                {value: \"CONTRACT\", label: \"CONTRACT\"}\r\n                                                            ]}\r\n                                                            value={data?.employeeType}\r\n                                                            placeholder=\"Select Employee Type\"\r\n                                                            handleDropdown={handleEmployee}\r\n                                                        />\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n\r\n                                                {data.employeeType == \"CONTRACT\"\r\n                                                &&\r\n\r\n                                                <div>\r\n                                                    <FormGroup row>\r\n                                                        <Label for=\"contractStart\" sm={2}>Contract Start</Label>\r\n                                                        <Col sm={10}>\r\n                                                            <Input\r\n                                                                onChange={handleChange}\r\n                                                                value={data?.contractStart || ''}\r\n                                                                type=\"date\"\r\n                                                                name=\"contractStart\"\r\n                                                                id=\"contractStart\"\r\n                                                                placeholder=\"contract start\"/>\r\n                                                        </Col>\r\n                                                    </FormGroup>\r\n                                                    <FormGroup row>\r\n                                                        <Label for=\"contractLength\" sm={2}>Contract Length</Label>\r\n                                                        <Col sm={10}>\r\n                                                            <Input\r\n                                                                onChange={handleChange}\r\n                                                                value={data?.contractLength || ''}\r\n                                                                type=\"number\"  min=\"0\"\r\n                                                                name=\"contractLength\"\r\n                                                                id=\"contractLength\"\r\n                                                                placeholder=\"contract length\"/>\r\n                                                        </Col>\r\n                                                    </FormGroup>\r\n                                                </div>\r\n                                                }\r\n\r\n                                                <FormGroup row>\r\n                                                    <Label for=\"idPhoto\" sm={2}>Personal ID Card Photo</Label>\r\n                                                    <Col sm={10}>\r\n                                                        <Input\r\n                                                            required\r\n                                                            type=\"file\"\r\n                                                            name=\"idPhoto\"\r\n                                                            onChange={handlePhoto}\r\n                                                            accept=\"image/jpeg, image/png\" />\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n                                                <FormGroup row>\r\n                                                    <Label for=\"profilePhoto\" sm={2}>Profile Photo</Label>\r\n                                                    <Col sm={10}>\r\n                                                        <Input\r\n                                                            required\r\n                                                            type=\"file\"\r\n                                                            name=\"profilePhoto\"\r\n                                                            onChange={handlePhoto}\r\n                                                            accept=\"image/jpeg, image/png\" />\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n\r\n                                                <FormGroup check row>\r\n                                                    <Col sm={{size: 10, offset: 2}}>\r\n                                                        <Button style={{background:\"#e42256\"}}>\r\n                                                            <FontAwesomeIcon icon={faSave}/>\r\n                                                            Submit\r\n                                                        </Button> {' '}\r\n                                                        <Button href=\"/customer\" style={{background:\"#e42256\"}}>\r\n                                                            <FontAwesomeIcon icon={faArrowLeft}/>\r\n                                                            Cancel\r\n                                                        </Button>\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n                                            </Form> :\r\n                                            <div>Loading...</div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <div> cannot access</div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // call reducer\r\n        error: state.findCustomerByIdReducer.error || state.saveCustomerReducer.error,\r\n        customer: state.findCustomerByIdReducer.data,\r\n        isLoading: state.findCustomerByIdReducer.isLoading,\r\n        update: state.updateCustomerReducer,\r\n        saveCustomer: state.saveCustomerReducer.data\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {findCustomerByIdAction, saveCustomerAction}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerForm)\r\n","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\customer\\customerList\\CustomerList.js",["211"],"import React, {useEffect} from 'react'\r\nimport CustomerRow from \"./CustomerRow\"\r\nimport {findAllCustomerAction} from '../../../actions/customerAction'\r\nimport {connect} from \"react-redux\"\r\nimport {Button, Table, Container} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Containers from \"../../../components/Containers/Container\";\r\nimport HeaderMaster from \"../../../components/navbar/NavbarMaster\";\r\nimport SignIn from \"../../login/SignIn\";\r\n\r\nfunction CustomerList({\r\n                          error,\r\n                          isLoading,\r\n                          customers,\r\n                          findAllCustomerAction\r\n                      }) {\r\n\r\n    const onReload = () => {\r\n        findAllCustomerAction();\r\n    };\r\n\r\n    useEffect(onReload, [findAllCustomerAction])\r\n\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"roles\") == \"MASTER\" ?\r\n                    <>\r\n                        <Containers error={error}>\r\n                            <HeaderMaster/>\r\n                            <Container fluid style={{width:\"90%\"}}>\r\n                                <div>\r\n                                    <div className=\"d-flex justify-content-center mb-3\">\r\n                                        <h1 style={{fontSize:\"3vw\", color:\"#e42556\", margin:\"3%\", textAlign:\"center\"}}>Customer List</h1>\r\n                                    </div>\r\n\r\n                                    <Button href=\"/customer/form\" style={{background:\"#e42256\"}}>\r\n                                        <FontAwesomeIcon icon={faSave}/> Add\r\n                                    </Button>\r\n                                    <Table bordered style={{marginTop: '10px'}}>\r\n                                        <thead>\r\n                                        <tr>\r\n                                            <th>Number</th>\r\n                                            <th>Full Name</th>\r\n                                            <th>Id Card</th>\r\n                                            <th>Email</th>\r\n                                            {/*<th>Address</th>*/}\r\n                                            <th>Employee Type</th>\r\n                                            <th>Action</th>\r\n                                        </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n\r\n                                        {\r\n                                            !isLoading ?\r\n                                                customers?.list?.map((e, i) => {\r\n\r\n                                                    return (\r\n                                                        <CustomerRow key={i} data={e} number={(customers.page * customers.size) + 1 + i} />\r\n                                                    )\r\n                                                })\r\n                                                :\r\n                                                <tr>\r\n                                                    <td colSpan=\"3\"> Loading..</td>\r\n                                                </tr>\r\n                                        }\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </div>\r\n                            </Container>\r\n                        </Containers>\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <SignIn/>\r\n                    </div>\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        error: state.findAllCustomerReducer.error,\r\n        customers: state.findAllCustomerReducer.data || [],\r\n        isLoading: state.findAllCustomerReducer.isLoading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    findAllCustomerAction\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerList)\r\n","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\transaction\\transactionForm\\TransactionForm.js",["212","213","214","215"],"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\configs\\api.js",[],"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\transaction\\transactionList\\TransactionRow.js",["216","217"],"import React from 'react'\r\nimport {Button} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faInfoCircle, faPencilAlt, faTrash} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst TransactionRow = ({data, onUpdate, number}) => {\r\n    return (\r\n\r\n        <tr>\r\n            <td>{number}</td>\r\n            <td>{data.customer.name}</td>\r\n            <td>{data.customer.employeeType} </td>\r\n            <td>{data.needType}</td>\r\n            <td>{data.loan}</td>\r\n            <td>{data.tenor}</td>\r\n            <td>{data.interestRate}</td>\r\n            <td>\r\n                <Button href={`/transaction/detail/${data.id}`} style={{background:\"#e42256\"}}>\r\n                    <FontAwesomeIcon icon={faInfoCircle}/>\r\n                </Button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default TransactionRow;\r\n\r\n","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\actions\\customerAction.js",[],"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\components\\DropdownList\\DropdownList.js",[],"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\components\\Containers\\Container.js",[],"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\actions\\transactionAction.js",[],"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\customer\\customerList\\CustomerRow.js",["218","219"],"import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Button} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faHandshake, faInfoCircle, faPencilAlt, faSave, faTrash} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst CustomerRow = ({data, onUpdate, number}) => {\r\n    return (\r\n        <tr>\r\n            <td>{number}</td>\r\n            <td>{data.name}</td>\r\n            <td>{data.idNumber} </td>\r\n            <td>{data.email}</td>\r\n            {/*<td>{data.address}</td>*/}\r\n            <td>{data.employeeType}</td>\r\n            <td>\r\n                <Button onClick={data} href={`/customer/${data.id}/detail`} style={{background:\"#e42256\"}}>\r\n                    <FontAwesomeIcon icon={faInfoCircle}/>\r\n                    </Button>{' '}\r\n                <Button onClick={onUpdate} href={`/customer/${data.id}/edit`} style={{background:\"#e42256\"}}>\r\n                    <FontAwesomeIcon icon={faPencilAlt}/>\r\n                </Button>{' '}\r\n                <Button href={`/transaction/form/${data.id}`} style={{background:\"#e42256\"}}>\r\n                    <FontAwesomeIcon icon={faHandshake}/>\r\n                </Button>{' '}\r\n                <Button style={{background:\"#e42256\"}}>\r\n                    <FontAwesomeIcon icon={faTrash}/>\r\n                </Button>{' '}\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default CustomerRow;\r\n","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\customer\\CustomerDetail.js",["220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236"],"import React, {useEffect, useState} from \"react\";\r\nimport {Link, useParams} from 'react-router-dom';\r\nimport Row, {Container, Modal} from \"reactstrap\";\r\nimport {connect} from \"react-redux\";\r\nimport {findCustomerByIdAction} from \"../../actions/customerAction\";\r\nimport {Button} from \"reactstrap\";\r\nimport {ModalHeader} from \"reactstrap\";\r\nimport {ModalBody} from \"reactstrap\";\r\nimport {Form} from \"reactstrap\";\r\nimport {FormGroup} from \"reactstrap\";\r\nimport {Col} from \"reactstrap\";\r\nimport {Label} from \"reactstrap\";\r\nimport {ModalFooter} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faInfo} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {Table} from \"reactstrap\";\r\n\r\nfunction CustomerDetail({isLoading, customer, findCustomerByIdAction}) {\r\n\r\n    let {id} = useParams()\r\n    const {data, setData} = useState({\r\n        name : \"\"\r\n    })\r\n    useEffect(() => {\r\n        findCustomerByIdAction(id)\r\n    }, [findCustomerByIdAction])\r\n\r\n    useEffect(() => {\r\n        if (id > 0)\r\n            findCustomerByIdAction(id)\r\n        console.log(\"useEffect\", findCustomerByIdAction)\r\n    }, [findCustomerByIdAction])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"roles\") == \"MASTER\" ?\r\n                    <>\r\n                        <Container>\r\n\r\n                             <div>\r\n                                 <Link to={`/customer`}>\r\n                                     <Button  style={{marginTop: \"10px\"}} color=\"dark\">\r\n                                        <FontAwesomeIcon icon={faArrowLeft}/>\r\n                                         Back\r\n                                     </Button>\r\n                                     <br/> <br/>\r\n                                 </Link>\r\n                             </div>\r\n                            <Table striped bordered hover size=\"sm\">\r\n                                <thead>\r\n                                <tr style={{textAlign:\"center\"}}>\r\n                                    <th width=\"200\">Name</th>\r\n                                    <th width=\"200\">Email</th>\r\n                                    <th width=\"200\">ID Number</th>\r\n                                    <th width=\"200\">Address</th>\r\n                                    <th width=\"200\">Employee Type</th>\r\n                                    <th width=\"200\">Contract Length</th>\r\n                                    <th width=\"200\">Contract Start</th>\r\n                                    <th width=\"200\">ID Photo</th>\r\n                                    <th width=\"200\">Profile Photo</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {!isLoading ? customer &&\r\n                                    <tr style={{textAlign:\"center\"}}>\r\n                                        <td >{customer.name}</td>\r\n                                        <td >{customer.email}</td>\r\n                                        <td >{customer.idNumber}</td>\r\n                                        <td >{customer.address}</td>\r\n                                        <td >{customer.employeeType}</td>\r\n                                        <td >{customer.contractLength}</td>\r\n                                        <td >{customer.contractStart}</td>\r\n                                        <td ><img src={customer.idPhoto}/></td>\r\n                                        <td ><img src={customer.profilePhoto}/></td>\r\n                                    </tr>\r\n                                    : <p>Loading...</p>}\r\n                                </tbody>\r\n                            </Table>\r\n                        </Container>\r\n                    </>\r\n                    :\r\n                <div> cannot access</div>\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoading: state.findCustomerByIdReducer.loading || state.saveCustomerReducer.loading,\r\n        customer: state.findCustomerByIdReducer.data || [],\r\n    }\r\n}\r\n\r\n//findById ambil dari action\r\nconst mapDispatchToProps = {findCustomerByIdAction}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerDetail)","D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\login\\SignUpForm\\SignUp.js",["237","238","239","240","241","242","243","244","245","246","247"],"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\login\\signUpForm\\SignUp.js",["248","249","250"],"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\login\\accountList\\AccountList.js",["251","252"],"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\configs\\sagas\\signupSaga.js",["253"],"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\pages\\login\\accountList\\AccountRow.js",[],"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\configs\\reducers\\signupReducer.js",[],"D:\\PROJECT GIT HUB\\project-credit-scoring\\final-project-api\\src\\actions\\signupAction.js",[],{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","severity":1,"message":"259","line":65,"column":8,"nodeType":"260","endLine":65,"endColumn":26,"suggestions":"261"},{"ruleId":"262","severity":1,"message":"263","line":186,"column":37,"nodeType":"264","endLine":186,"endColumn":79},{"ruleId":"265","severity":1,"message":"266","line":16,"column":51,"nodeType":"267","messageId":"268","endLine":16,"endColumn":53},{"ruleId":"269","severity":1,"message":"270","line":31,"column":45,"nodeType":"264","endLine":32,"endColumn":80},{"ruleId":"254","replacedBy":"271"},{"ruleId":"256","replacedBy":"272"},{"ruleId":"273","severity":1,"message":"274","line":1,"column":9,"nodeType":"275","messageId":"276","endLine":1,"endColumn":15},{"ruleId":"273","severity":1,"message":"277","line":4,"column":9,"nodeType":"275","messageId":"276","endLine":4,"endColumn":24},{"ruleId":"273","severity":1,"message":"278","line":5,"column":9,"nodeType":"275","messageId":"276","endLine":5,"endColumn":15},{"ruleId":"273","severity":1,"message":"279","line":6,"column":9,"nodeType":"275","messageId":"276","endLine":6,"endColumn":13},{"ruleId":"273","severity":1,"message":"279","line":4,"column":9,"nodeType":"275","messageId":"276","endLine":4,"endColumn":13},{"ruleId":"273","severity":1,"message":"280","line":6,"column":10,"nodeType":"275","messageId":"276","endLine":6,"endColumn":21},{"ruleId":"273","severity":1,"message":"281","line":6,"column":62,"nodeType":"275","messageId":"276","endLine":6,"endColumn":66},{"ruleId":"273","severity":1,"message":"282","line":6,"column":68,"nodeType":"275","messageId":"276","endLine":6,"endColumn":78},{"ruleId":"273","severity":1,"message":"283","line":6,"column":80,"nodeType":"275","messageId":"276","endLine":6,"endColumn":88},{"ruleId":"273","severity":1,"message":"284","line":16,"column":12,"nodeType":"275","messageId":"276","endLine":16,"endColumn":17},{"ruleId":"273","severity":1,"message":"285","line":16,"column":19,"nodeType":"275","messageId":"276","endLine":16,"endColumn":27},{"ruleId":"258","severity":1,"message":"286","line":41,"column":8,"nodeType":"260","endLine":41,"endColumn":18,"suggestions":"287"},{"ruleId":"273","severity":1,"message":"288","line":58,"column":15,"nodeType":"275","messageId":"276","endLine":58,"endColumn":23},{"ruleId":"273","severity":1,"message":"289","line":71,"column":11,"nodeType":"275","messageId":"276","endLine":71,"endColumn":24},{"ruleId":"273","severity":1,"message":"288","line":76,"column":15,"nodeType":"275","messageId":"276","endLine":76,"endColumn":23},{"ruleId":"273","severity":1,"message":"290","line":90,"column":11,"nodeType":"275","messageId":"276","endLine":90,"endColumn":29},{"ruleId":"273","severity":1,"message":"288","line":95,"column":15,"nodeType":"275","messageId":"276","endLine":95,"endColumn":23},{"ruleId":"265","severity":1,"message":"266","line":134,"column":47,"nodeType":"267","messageId":"268","endLine":134,"endColumn":49},{"ruleId":"265","severity":1,"message":"266","line":213,"column":68,"nodeType":"267","messageId":"268","endLine":213,"endColumn":70},{"ruleId":"265","severity":1,"message":"266","line":29,"column":47,"nodeType":"267","messageId":"268","endLine":29,"endColumn":49},{"ruleId":"273","severity":1,"message":"291","line":29,"column":11,"nodeType":"275","messageId":"276","endLine":29,"endColumn":25},{"ruleId":"258","severity":1,"message":"292","line":48,"column":8,"nodeType":"260","endLine":48,"endColumn":10,"suggestions":"293"},{"ruleId":"258","severity":1,"message":"294","line":52,"column":8,"nodeType":"260","endLine":52,"endColumn":14,"suggestions":"295"},{"ruleId":"296","severity":1,"message":"297","line":163,"column":109,"nodeType":"298","endLine":163,"endColumn":116},{"ruleId":"273","severity":1,"message":"299","line":4,"column":23,"nodeType":"275","messageId":"276","endLine":4,"endColumn":34},{"ruleId":"273","severity":1,"message":"300","line":4,"column":36,"nodeType":"275","messageId":"276","endLine":4,"endColumn":43},{"ruleId":"273","severity":1,"message":"279","line":2,"column":9,"nodeType":"275","messageId":"276","endLine":2,"endColumn":13},{"ruleId":"273","severity":1,"message":"278","line":5,"column":49,"nodeType":"275","messageId":"276","endLine":5,"endColumn":55},{"ruleId":"273","severity":1,"message":"301","line":3,"column":8,"nodeType":"275","messageId":"276","endLine":3,"endColumn":11},{"ruleId":"273","severity":1,"message":"302","line":3,"column":25,"nodeType":"275","messageId":"276","endLine":3,"endColumn":30},{"ruleId":"273","severity":1,"message":"303","line":7,"column":9,"nodeType":"275","messageId":"276","endLine":7,"endColumn":20},{"ruleId":"273","severity":1,"message":"304","line":8,"column":9,"nodeType":"275","messageId":"276","endLine":8,"endColumn":18},{"ruleId":"273","severity":1,"message":"305","line":9,"column":9,"nodeType":"275","messageId":"276","endLine":9,"endColumn":13},{"ruleId":"273","severity":1,"message":"306","line":10,"column":9,"nodeType":"275","messageId":"276","endLine":10,"endColumn":18},{"ruleId":"273","severity":1,"message":"307","line":11,"column":9,"nodeType":"275","messageId":"276","endLine":11,"endColumn":12},{"ruleId":"273","severity":1,"message":"308","line":12,"column":9,"nodeType":"275","messageId":"276","endLine":12,"endColumn":14},{"ruleId":"273","severity":1,"message":"309","line":13,"column":9,"nodeType":"275","messageId":"276","endLine":13,"endColumn":20},{"ruleId":"273","severity":1,"message":"310","line":15,"column":22,"nodeType":"275","messageId":"276","endLine":15,"endColumn":28},{"ruleId":"273","severity":1,"message":"311","line":21,"column":12,"nodeType":"275","messageId":"276","endLine":21,"endColumn":16},{"ruleId":"273","severity":1,"message":"312","line":21,"column":18,"nodeType":"275","messageId":"276","endLine":21,"endColumn":25},{"ruleId":"258","severity":1,"message":"313","line":26,"column":8,"nodeType":"260","endLine":26,"endColumn":32,"suggestions":"314"},{"ruleId":"258","severity":1,"message":"313","line":32,"column":8,"nodeType":"260","endLine":32,"endColumn":32,"suggestions":"315"},{"ruleId":"265","severity":1,"message":"266","line":37,"column":47,"nodeType":"267","messageId":"268","endLine":37,"endColumn":49},{"ruleId":"316","severity":1,"message":"317","line":74,"column":46,"nodeType":"264","endLine":74,"endColumn":75},{"ruleId":"316","severity":1,"message":"317","line":75,"column":46,"nodeType":"264","endLine":75,"endColumn":80},{"ruleId":"273","severity":1,"message":"318","line":6,"column":5,"nodeType":"275","messageId":"276","endLine":6,"endColumn":13},{"ruleId":"273","severity":1,"message":"319","line":14,"column":8,"nodeType":"275","messageId":"276","endLine":14,"endColumn":12},{"ruleId":"273","severity":1,"message":"311","line":36,"column":19,"nodeType":"275","messageId":"276","endLine":36,"endColumn":23},{"ruleId":"273","severity":1,"message":"320","line":57,"column":13,"nodeType":"275","messageId":"276","endLine":57,"endColumn":26},{"ruleId":"273","severity":1,"message":"321","line":60,"column":13,"nodeType":"275","messageId":"276","endLine":60,"endColumn":26},{"ruleId":"273","severity":1,"message":"322","line":63,"column":13,"nodeType":"275","messageId":"276","endLine":63,"endColumn":23},{"ruleId":"273","severity":1,"message":"323","line":66,"column":13,"nodeType":"275","messageId":"276","endLine":66,"endColumn":26},{"ruleId":"273","severity":1,"message":"324","line":69,"column":13,"nodeType":"275","messageId":"276","endLine":69,"endColumn":22},{"ruleId":"273","severity":1,"message":"325","line":72,"column":13,"nodeType":"275","messageId":"276","endLine":72,"endColumn":32},{"ruleId":"273","severity":1,"message":"326","line":105,"column":11,"nodeType":"275","messageId":"276","endLine":105,"endColumn":27},{"ruleId":"273","severity":1,"message":"327","line":112,"column":11,"nodeType":"275","messageId":"276","endLine":112,"endColumn":36},{"ruleId":"258","severity":1,"message":"328","line":38,"column":8,"nodeType":"260","endLine":38,"endColumn":15,"suggestions":"329"},{"ruleId":"273","severity":1,"message":"288","line":56,"column":15,"nodeType":"275","messageId":"276","endLine":56,"endColumn":23},{"ruleId":"273","severity":1,"message":"330","line":77,"column":11,"nodeType":"275","messageId":"276","endLine":77,"endColumn":22},{"ruleId":"258","severity":1,"message":"331","line":48,"column":8,"nodeType":"260","endLine":48,"endColumn":30,"suggestions":"332"},{"ruleId":"258","severity":1,"message":"331","line":55,"column":8,"nodeType":"260","endLine":55,"endColumn":19,"suggestions":"333"},{"ruleId":"273","severity":1,"message":"334","line":9,"column":43,"nodeType":"275","messageId":"276","endLine":9,"endColumn":58},"no-native-reassign",["335"],"no-negated-in-lhs",["336"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["337"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["335"],["336"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'FontAwesomeIcon' is defined but never used.","'faSave' is defined but never used.","'Link' is defined but never used.","'CustomInput' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardBody' is defined but never used.","'roles' is assigned a value but never used.","'setRoles' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data.id', 'findCustomerByIdAction', and 'id'. Either include them or remove the dependency array. If 'findCustomerByIdAction' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["338"],"'response' is assigned a value but never used.","'uploadIdPhoto' is assigned a value but never used.","'uploadProfilePhoto' is assigned a value but never used.","'handleCustomer' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data', 'findCustomerByIdAction', and 'id'. Either include them or remove the dependency array. If 'findCustomerByIdAction' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["339"],"React Hook useEffect has a missing dependency: 'customer'. Either include it or remove the dependency array.",["340"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'faPencilAlt' is defined but never used.","'faTrash' is defined but never used.","'Row' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Col' is defined but never used.","'Label' is defined but never used.","'ModalFooter' is defined but never used.","'faInfo' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["341"],["342"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'faServer' is defined but never used.","'swal' is defined but never used.","'fullNameError' is assigned a value but never used.","'usernameError' is assigned a value but never used.","'emailError' is assigned a value but never used.","'passwordError' is assigned a value but never used.","'roleError' is assigned a value but never used.","'profilePictureError' is assigned a value but never used.","'handleRoleChange' is assigned a value but never used.","'handleProfilPictureChange' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data.id' and 'id'. Either include them or remove the dependency array.",["343"],"'handleRoles' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'onReload'. Either include it or remove the dependency array.",["344"],["345"],"'UPDATE_CUSTOMER' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"354","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},"Update the dependencies array to be: [loginData, error, history]",{"range":"363","text":"364"},"Update the dependencies array to be: [customer, data.id, findCustomerByIdAction, id]",{"range":"365","text":"366"},"Update the dependencies array to be: [data, findCustomerByIdAction, id]",{"range":"367","text":"368"},"Update the dependencies array to be: [customer, data]",{"range":"369","text":"370"},"Update the dependencies array to be: [findCustomerByIdAction, id]",{"range":"371","text":"372"},{"range":"373","text":"372"},"Update the dependencies array to be: [data.id, id, users]",{"range":"374","text":"375"},"Update the dependencies array to be: [findAllAccountAction, onReload]",{"range":"376","text":"377"},"Update the dependencies array to be: [isRemoved, onReload]",{"range":"378","text":"379"},[2216,2234],"[loginData, error, history]",[1600,1610],"[customer, data.id, findCustomerByIdAction, id]",[1695,1697],"[data, findCustomerByIdAction, id]",[1791,1797],"[customer, data]",[970,994],"[findCustomerByIdAction, id]",[1148,1172],[1254,1261],"[data.id, id, users]",[1434,1456],"[findAllAccountAction, onReload]",[1595,1606],"[isRemoved, onReload]"]